<?php

declare(strict_types=1);

namespace App\UI\Http\Rest\Error;

enum ErrorType: string
{
    case ACCESS_DENIED = 'ACCESS_DENIED';
    case INTERNAL_ERROR = 'INTERNAL_ERROR';
    case INVALID_DATA = 'INVALID_DATA';
    case VALUE_CANNOT_BE_EMPTY = 'VALUE_CANNOT_BE_EMPTY';
    case VALUE_TOO_LONG = 'VALUE_TOO_LONG';
    case VALUE_TOO_SHORT = 'VALUE_TOO_SHORT';

    # ARTICLE #
    case ARTICLE_NOT_FOUND = 'ARTICLE_NOT_FOUND';
    case ARTICLE_SLUG_ALREADY_EXIST = 'ARTICLE_SLUG_ALREADY_EXIST';

    # INT #
    case VALUE_IS_TOO_HIGH = 'VALUE_IS_TOO_HIGH';
    case VALUE_IS_TOO_LOW = 'VALUE_IS_TOO_LOW';

    # PICTURE #
    case INVALID_PICTURE = 'INVALID_PICTURE';
    case CANNOT_OPEN_PICTURE = 'CANNOT_OPEN_PICTURE';
    case PICTURE_NOT_FOUND = 'PICTURE_NOT_FOUND';

    # STRING #
    case INVALID_STRING_CONTAIN_WHITESPACE = 'INVALID_STRING_CONTAIN_WHITESPACE';
    case INVALID_UUID = 'INVALID_UUID';
    case INVALID_PASSWORD_UPPERCASE = 'PASSWORD_NOT_CONTAIN_UPPERCASE_CHARACTER';
    case INVALID_PASSWORD_LOWERCASE = 'PASSWORD_NOT_CONTAIN_LOWERCASE_CHARACTER';
    case INVALID_PASSWORD_SPECIAL_CHARACTER = 'PASSWORD_NOT_CONTAIN_SPECIAL_CHARACTER';
    case INVALID_PASSWORD_NUMBER = 'PASSWORD_NOT_CONTAIN_NUMBER';

    # TEST #
    case TEST_NOT_FOUND = 'TEST_NOT_FOUND';

    # USER #
    case USER_NOT_FOUND = 'USER_NOT_FOUND';
    case USER_EMAIL_ALREADY_EXIST = 'USER_EMAIL_ALREADY_EXIST';
    case USER_NICKNAME_ALREADY_EXIST = 'USER_NICKNAME_ALREADY_EXIST';
    case PASSWORDS_NOT_THE_SAME = 'PASSWORDS_NOT_THE_SAME';
    case PASSWORD_DOES_NOT_MATCH = 'PASSWORD_DOES_NOT_MATCH';
}
